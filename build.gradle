plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'eclipse'
    id 'jacoco'
    id 'checkstyle'
    id 'com.github.spotbugs' version '4.0.4'
    id 'pmd'
    id 'de.aaschmid.cpd' version '3.1'
}
group = 'com.tactfactory.monprojet'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
repositories {
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'mysql:mysql-connector-java'
    //testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
}
test {
    useJUnitPlatform()
    ignoreFailures = true
}
    
//def classesJava = "${project.buildDir}/classes/java/main/"
//def javasRoot = "${rootProject.rootDir}/src/main/java"
//def testClassesJava = "${project.buildDir}/classes/java/test"
//def testJavaRoot = "${rootProject.rootDir}/src/test/java"

//Checkstyle
checkstyle {
    toolVersion = "6.3"
    ignoreFailures = true
    showViolations = false
    checkstyleTest.enabled = false
    configFile = file("${rootProject.rootDir}/checkstyle.xml")
}
tasks.withType(Checkstyle) {
    reports {
        xml.enabled true
        html.enabled true
        xml.destination file("${project.buildDir}/reports/checkstyle/main.xml")
    }
}
//spotbug
spotbugs {
    toolVersion = '4.0.1'
    ignoreFailures = true
    spotbugsTest.enabled = false
}
// Jacoco
jacoco {
    toolVersion = "0.8.2"
}
jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled true
    }
}
//pmd
pmd {
    pmdTest.enabled = false
    toolVersion = '6.8.0'
    ruleSetFiles = files("${rootProject.rootDir}/pmd_rules.xml")
    ignoreFailures = true
}
tasks.withType(Pmd) {
    reports {
        xml.enabled true
        html.enabled true
    }
}
//cpd
cpdCheck {
    reports {
        text.enabled = true
        xml.enabled = true
    }
    source = sourceSets.main.allJava // only java, groovy and scala classes in 'main' sourceSets
    minimumTokenCount = 50
}
//javadoc
javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}